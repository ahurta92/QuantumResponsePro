from quantumresponsepro import DaltonRunner
from quantumresponsepro import DaltonRunner
from pathlib import Path
import glob


def generate_dalton_excited_state_json(xc, basis_list, database_path: Path, run: bool = False):
    """
    Generate excited state json files for a given xc functional
    and basis set list. Reads data from dalton directory in database_path.
    If data is not found can be generated by running dalton with run = True.
    """
    molecule_path = database_path.joinpath("molecules")

    print('database path', database_path)
    print('molecule path', molecule_path)

    mol_p = glob.glob('*.mol', root_dir=molecule_path)
    molecule_list = [mol.split('.')[0] for mol in mol_p]

    print(molecule_list)
    dal_runner = DaltonRunner(database_path, run)

    data_dict = {xc: {}}
    for molecule in molecule_list:
        data_dict[xc][molecule] = {}
        for basis in basis_list:
            data_dict[xc][molecule][basis] = dal_runner.get_excited_json(molecule, xc, basis, run, 4)

    return data_dict
